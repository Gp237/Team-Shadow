# -*- coding: utf-8 -*-
"""stockageIllegalePrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VSMeRXX9aIFudyQv8DwGG6wyzCiLCiK0
"""

import pandas as pd
df = pd.read_csv("/content/drive/MyDrive/prediction_achat_illegal - test.csv", sep=',')
df.head

data = df[['nom','dateRecComm','QteRecuComm','ville', 'nbHabitants','qteProd', 'prixProd (TND)', 'prixAchat  (TND)']]
data

data['dateRecComm']

data['dateRecComm'] = data['dateRecComm'].str.replace("/","-")

data['dateRecComm']



data

data

import numpy as np

data['illegal'] = np.where(data['prixAchat  (TND)'] > data['prixProd (TND)'], True, False)
data

features = data.drop(columns=['illegal']) # or inputs or X
features = features.drop(columns=['ville']) # or inputs or X
features = features.drop(columns=['nom']) # or inputs or X
features = features.drop(columns=['dateRecComm']) # or inputs or X
labels = data['illegal'] # or output or Y or target
features

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2, random_state=42)

from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
# from sklearn.naive_bayes import NaiveBayesClassifier
from sklearn.metrics import accuracy_score

tree = DecisionTreeClassifier()
svm = SVC()
# TODO: Complete the initializations 

models = [('tree',tree)]
# TODO: complete the (model,name) tuple list 

for name,model in models:
  model.fit(X_train, y_train)
  preds = model.predict(X_test)
  print(name, accuracy_score(y_test, preds))

from google.colab import drive
drive.mount('/content/drive')

